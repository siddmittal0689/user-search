{"ast":null,"code":"import * as types from './actionTypes';\nimport moment from \"moment\";\nexport function loadUsersSuccess(users) {\n  return {\n    type: types.LOAD_USER_SUCCESS,\n    users\n  };\n}\nexport function showLoader(data) {\n  return {\n    type: types.SHOW_LOADER,\n    data\n  };\n}\n\nfunction transformArr(users, campaignArray) {\n  var filterArray = campaignArray.filter(item => {\n    if (moment(item.endDate) > moment(item.startDate)) {\n      users.find(user => {\n        if (user.id === item.userId) {\n          item.campaignName = user.name;\n        }\n      });\n\n      if (users.find(user => user.id === item.userId) === undefined) {\n        item.name = \"Unknown User\";\n      }\n\n      if (moment(item.endDate) >= moment()) {\n        item.status = \"Active\";\n      } else {\n        item.status = \"Inactive\";\n      }\n\n      return true;\n    }\n  });\n  return filterArray;\n}\n\nexport function loadUsers(arr) {\n  return function (dispatch, getState) {\n    dispatch(showLoader(true));\n    return fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json(), error => console.log('An error occurred.', error)).then(json => {\n      dispatch(loadUsersSuccess(transformArr(json, arr)));\n      dispatch(showLoader(false));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\user-new\\user-search\\src\\actions\\index.js"],"names":["types","moment","loadUsersSuccess","users","type","LOAD_USER_SUCCESS","showLoader","data","SHOW_LOADER","transformArr","campaignArray","filterArray","filter","item","endDate","startDate","find","user","id","userId","campaignName","name","undefined","status","loadUsers","arr","dispatch","getState","fetch","then","response","json","error","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,SAAO;AAAEC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,iBAAd;AAAiCF,IAAAA;AAAjC,GAAP;AACD;AAED,OAAO,SAASG,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AAAEH,IAAAA,IAAI,EAAEJ,KAAK,CAACQ,WAAd;AAA2BD,IAAAA;AAA3B,GAAP;AACD;;AACD,SAASE,YAAT,CAAsBN,KAAtB,EAA4BO,aAA5B,EAA2C;AACrC,MAAIC,WAAW,GAAGD,aAAa,CAACE,MAAd,CAAqBC,IAAI,IAAI;AAC7C,QAAGZ,MAAM,CAACY,IAAI,CAACC,OAAN,CAAN,GAAuBb,MAAM,CAACY,IAAI,CAACE,SAAN,CAAhC,EAAiD;AAC/CZ,MAAAA,KAAK,CAACa,IAAN,CAAWC,IAAI,IAAI;AACjB,YAAGA,IAAI,CAACC,EAAL,KAAYL,IAAI,CAACM,MAApB,EAA2B;AACzBN,UAAAA,IAAI,CAACO,YAAL,GAAoBH,IAAI,CAACI,IAAzB;AACD;AACF,OAJD;;AAKA,UAAGlB,KAAK,CAACa,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,IAAI,CAACM,MAApC,MAAgDG,SAAnD,EAA6D;AAC3DT,QAAAA,IAAI,CAACQ,IAAL,GAAY,cAAZ;AACD;;AACD,UAAGpB,MAAM,CAACY,IAAI,CAACC,OAAN,CAAN,IAAwBb,MAAM,EAAjC,EAAoC;AAClCY,QAAAA,IAAI,CAACU,MAAL,GAAc,QAAd;AACD,OAFD,MAEM;AACJV,QAAAA,IAAI,CAACU,MAAL,GAAc,UAAd;AACD;;AACD,aAAO,IAAP;AACD;AAEF,GAlBiB,CAAlB;AAmBD,SAAOZ,WAAP;AACJ;;AAED,OAAO,SAASa,SAAT,CAAmBC,GAAnB,EAAwB;AAE3B,SAAO,UAAUC,QAAV,EAAmBC,QAAnB,EAA6B;AAChCD,IAAAA,QAAQ,CAACpB,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,WAAOsB,KAAK,8CAAL,CACNC,IADM,CAEHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFT,EAGHC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CAHN,EAKNH,IALM,CAKAE,IAAD,IAAU;AACZL,MAAAA,QAAQ,CAACxB,gBAAgB,CAACO,YAAY,CAACsB,IAAD,EAAMN,GAAN,CAAb,CAAjB,CAAR;AACAC,MAAAA,QAAQ,CAACpB,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KARM,CAAP;AAUH,GAZD;AAaH","sourcesContent":["import * as types from './actionTypes';\r\nimport moment from \"moment\";\r\n\r\nexport function loadUsersSuccess(users) {\r\n  return { type: types.LOAD_USER_SUCCESS, users };\r\n}\r\n\r\nexport function showLoader(data) {\r\n  return { type: types.SHOW_LOADER, data };\r\n}\r\nfunction transformArr(users,campaignArray) {\r\n      var filterArray = campaignArray.filter(item => {\r\n        if(moment(item.endDate) > moment(item.startDate)){\r\n          users.find(user => {\r\n            if(user.id === item.userId){\r\n              item.campaignName = user.name\r\n            }\r\n          })\r\n          if(users.find(user => user.id === item.userId) === undefined){\r\n            item.name = \"Unknown User\";\r\n          }\r\n          if(moment(item.endDate) >= moment()){\r\n            item.status = \"Active\";\r\n          } else{\r\n            item.status = \"Inactive\"\r\n          }\r\n          return true;\r\n        }\r\n       \r\n      });\r\n     return filterArray;\r\n}\r\n\r\nexport function loadUsers(arr) {\r\n  \r\n    return function (dispatch,getState) {\r\n        dispatch(showLoader(true));\r\n        return fetch(`https://jsonplaceholder.typicode.com/users`)\r\n        .then(\r\n            response => response.json(),\r\n            error => console.log('An error occurred.', error),\r\n        )\r\n        .then((json) => {\r\n            dispatch(loadUsersSuccess(transformArr(json,arr)));\r\n            dispatch(showLoader(false));\r\n        },\r\n        );\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}