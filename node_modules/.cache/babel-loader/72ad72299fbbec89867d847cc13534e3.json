{"ast":null,"code":"var _jsxFileName = \"C:\\\\user-new\\\\user-search\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './App.css';\nimport { UsersList } from \"./components/UsersList\";\nimport { DatePicker } from \"./components/DatePicker\";\nimport { SearchUsers } from \"./components/SearchUsers\";\nimport { Loader } from \"./components/Loader\";\nimport * as userActions from './components/actions';\nimport configureStore from './components/store/configureStore';\nimport moment from \"moment\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.props.actions.loadUsers();\n\n      window.AddCampaigns = function (arr) {\n        if (Array.isArray(arr)) {\n          // const newCampaignArray = [...props.newCampaignArray,...arr];\n          const store = configureStore();\n          console.log(store.getState()); //store.dispatch(reRenderComp(newCampaignArray));\n        } else {\n          console.log(\"AddCampaigns method accepts only array\");\n        }\n      };\n    };\n\n    this.onTextSearch = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    this.setStartDate = e => {\n      this.setState({\n        startDate: e.target.value\n      });\n    };\n\n    this.setEndDate = e => {\n      this.setState({\n        endDate: e.target.value\n      });\n    };\n\n    this.updateHandler = () => {\n      const users = this.props.users;\n      const _this$state = this.state,\n            startDate = _this$state.startDate,\n            endDate = _this$state.endDate,\n            searchText = _this$state.searchText;\n      const filteredUsers = users.filter(user => {\n        let textSearchFilter = true;\n        let startDateFilter = true;\n        let endDateFilter = true;\n\n        if (searchText) {\n          textSearchFilter = user.campaignName.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n        }\n\n        if (startDate) {\n          startDateFilter = moment(user.startDate) > moment(startDate);\n        }\n\n        if (endDate) {\n          endDateFilter = moment(user.endDate) < moment(endDate);\n        }\n\n        return textSearchFilter && startDateFilter && endDateFilter;\n      });\n      this.setState({\n        filteredUsers: filteredUsers\n      });\n    };\n\n    this.state = {\n      searchText: '',\n      filteredUsers: [],\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _this$props = this.props,\n          users = _this$props.users,\n          newCampaignArray = _this$props.newCampaignArray;\n\n    if (nextProps.users !== users) {\n      this.setState({\n        filteredUsers: nextProps.users\n      });\n    }\n\n    if (nextProps.newCampaignArray !== newCampaignArray) {\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.showLoader ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"row search-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      setStartDate: this.setStartDate,\n      setEndDate: this.setEndDate,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(SearchUsers, {\n      onTextSearch: this.onTextSearch,\n      searchText: this.state.searchText,\n      updateHandler: this.updateHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(UsersList, {\n      campaignArray: this.state.filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.usersCampaign.users,\n    showLoader: state.usersCampaign.showLoader,\n    newCampaignArray: state.usersCampaign.newCampaignArray\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\user-new\\user-search\\src\\App.js"],"names":["React","connect","bindActionCreators","UsersList","DatePicker","SearchUsers","Loader","userActions","configureStore","moment","App","Component","constructor","props","componentDidMount","actions","loadUsers","window","AddCampaigns","arr","Array","isArray","store","console","log","getState","onTextSearch","e","setState","searchText","target","value","setStartDate","startDate","setEndDate","endDate","updateHandler","users","state","filteredUsers","filter","user","textSearchFilter","startDateFilter","endDateFilter","campaignName","toLowerCase","indexOf","componentWillReceiveProps","nextProps","newCampaignArray","forceUpdate","render","showLoader","mapStateToProps","usersCampaign","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport './App.css';\r\nimport { UsersList } from \"./components/UsersList\";\r\nimport { DatePicker } from \"./components/DatePicker\";\r\nimport { SearchUsers } from \"./components/SearchUsers\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport * as userActions from './components/actions';\r\nimport configureStore from './components/store/configureStore';\r\nimport moment from \"moment\";\r\n\r\nclass App extends  React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      searchText:'',\r\n      filteredUsers: [],\r\n      startDate: '',\r\n      endDate: '',\r\n    }\r\n  }\r\n  \r\n\r\n componentWillReceiveProps(nextProps){\r\n  const {users, newCampaignArray}  = this.props;\r\n  if(nextProps.users !==users){\r\n    this.setState({\r\n      filteredUsers: nextProps.users,\r\n    });\r\n  }\r\n  if(nextProps.newCampaignArray !==newCampaignArray){\r\n    this.forceUpdate();\r\n  }\r\n }\r\n\r\n  componentDidMount = () =>{\r\n    this.props.actions.loadUsers();\r\n    window.AddCampaigns = function(arr){\r\n      if(Array.isArray(arr)){\r\n        // const newCampaignArray = [...props.newCampaignArray,...arr];\r\n        const store = configureStore();\r\n        console.log(store.getState());\r\n        //store.dispatch(reRenderComp(newCampaignArray));\r\n      } else {\r\n        console.log(\"AddCampaigns method accepts only array\");\r\n      }\r\n    }\r\n  }\r\n\r\n  onTextSearch = (e) =>{\r\n    this.setState({\r\n      searchText: e.target.value,\r\n    });\r\n  }\r\n\r\n  setStartDate = (e) =>{\r\n    this.setState({\r\n      startDate: e.target.value,\r\n    });\r\n  }\r\n  \r\n  setEndDate = (e) =>{\r\n    this.setState({\r\n      endDate: e.target.value,\r\n    });\r\n  }\r\n\r\n  updateHandler = () =>{\r\n    const {users}  = this.props;\r\n    const {startDate, endDate, searchText}  = this.state;\r\n    const filteredUsers = users.filter(user => {\r\n      let textSearchFilter = true;\r\n      let startDateFilter = true;\r\n      let endDateFilter = true;\r\n      if(searchText){\r\n        textSearchFilter = user.campaignName.toLowerCase().indexOf(\r\n          searchText.toLowerCase()) !== -1;\r\n      }\r\n      if(startDate){\r\n        startDateFilter = moment(user.startDate) > moment(startDate);\r\n      }\r\n      if(endDate){\r\n        endDateFilter = moment(user.endDate) < moment(endDate);\r\n      }\r\n      return textSearchFilter && startDateFilter && endDateFilter;\r\n      \r\n    });\r\n    this.setState({\r\n      filteredUsers: filteredUsers,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App container\" >     \r\n        {this.props.showLoader ?\r\n          <Loader/> :\r\n          <>\r\n          <div className=\"row search-area\">\r\n            <DatePicker\r\n              setStartDate={this.setStartDate}\r\n              setEndDate={this.setEndDate}\r\n              startDate={this.state.startDate}\r\n              endDate={this.state.endDate}\r\n              />\r\n              <SearchUsers \r\n                onTextSearch= {this.onTextSearch}\r\n                searchText ={this.state.searchText}\r\n                updateHandler={this.updateHandler}\r\n              />\r\n          </div>\r\n          \r\n          <UsersList \r\n            campaignArray = {this.state.filteredUsers}\r\n          />\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.usersCampaign.users,\r\n    showLoader: state.usersCampaign.showLoader,\r\n    newCampaignArray: state.usersCampaign.newCampaignArray,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(userActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n"]},"metadata":{},"sourceType":"module"}