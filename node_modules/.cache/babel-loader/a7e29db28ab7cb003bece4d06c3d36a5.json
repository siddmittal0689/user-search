{"ast":null,"code":"var _jsxFileName = \"C:\\\\user-new\\\\user-search\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './App.css';\nimport { UsersList } from \"./components/UsersList\";\nimport { DatePicker } from \"./components/DatePicker\";\nimport { SearchUsers } from \"./components/SearchUsers\";\nimport { Loader } from \"./components/Loader\";\nimport * as userActions from './components/actions';\nimport moment from \"moment\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCampaignArray = arr => {\n      console.log(arr, this.state, this.props);\n    };\n\n    this.componentDidMount = () => {\n      const defaultCampaignArray = this.props.defaultCampaignArray;\n      this.props.actions.loadUsers();\n      const that = this;\n\n      window.AddCampaigns = function (arr) {\n        if (Array.isArray(arr)) {\n          that.setState({\n            newCampaignArray: [...defaultCampaignArray, ...arr]\n          });\n        } else {\n          console.log(\"AddCampaigns method accepts only array\");\n        }\n      };\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      console.log(prevState, this.props, this.state);\n    };\n\n    this.onTextSearch = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    this.setStartDate = e => {\n      this.setState({\n        startDate: e.target.value\n      });\n    };\n\n    this.setEndDate = e => {\n      this.setState({\n        endDate: e.target.value\n      });\n    };\n\n    this.updateHandler = () => {\n      const users = this.props.users;\n      const _this$state = this.state,\n            startDate = _this$state.startDate,\n            endDate = _this$state.endDate,\n            searchText = _this$state.searchText;\n      const filteredUsers = users.filter(user => {\n        let textSearchFilter = true;\n        let startDateFilter = true;\n        let endDateFilter = true;\n\n        if (searchText) {\n          textSearchFilter = user.campaignName.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n        }\n\n        if (startDate) {\n          startDateFilter = moment(user.startDate) > moment(startDate);\n        }\n\n        if (endDate) {\n          endDateFilter = moment(user.endDate) < moment(endDate);\n        }\n\n        return textSearchFilter && startDateFilter && endDateFilter;\n      });\n      this.setState({\n        filteredUsers: filteredUsers\n      });\n    };\n\n    this.state = {\n      searchText: '',\n      filteredUsers: [],\n      startDate: '',\n      endDate: '',\n      newCampaignArray: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const users = this.props.users;\n\n    if (nextProps.users !== users) {\n      this.setState({\n        filteredUsers: nextProps.users\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.showLoader ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"row search-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      setStartDate: this.setStartDate,\n      setEndDate: this.setEndDate,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(SearchUsers, {\n      onTextSearch: this.onTextSearch,\n      searchText: this.state.searchText,\n      updateHandler: this.updateHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(UsersList, {\n      campaignArray: this.state.filteredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.usersCampaign.users,\n    showLoader: state.usersCampaign.showLoader,\n    defaultCampaignArray: state.usersCampaign.defaultCampaignArray\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\user-new\\user-search\\src\\App.js"],"names":["React","connect","bindActionCreators","UsersList","DatePicker","SearchUsers","Loader","userActions","moment","App","Component","constructor","props","updateCampaignArray","arr","console","log","state","componentDidMount","defaultCampaignArray","actions","loadUsers","that","window","AddCampaigns","Array","isArray","setState","newCampaignArray","componentDidUpdate","prevProps","prevState","onTextSearch","e","searchText","target","value","setStartDate","startDate","setEndDate","endDate","updateHandler","users","filteredUsers","filter","user","textSearchFilter","startDateFilter","endDateFilter","campaignName","toLowerCase","indexOf","componentWillReceiveProps","nextProps","render","showLoader","mapStateToProps","usersCampaign","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport './App.css';\r\nimport { UsersList } from \"./components/UsersList\";\r\nimport { DatePicker } from \"./components/DatePicker\";\r\nimport { SearchUsers } from \"./components/SearchUsers\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport * as userActions from './components/actions';\r\nimport moment from \"moment\";\r\n\r\nclass App extends  React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      searchText:'',\r\n      filteredUsers: [],\r\n      startDate: '',\r\n      endDate: '',\r\n      newCampaignArray: [],\r\n    }\r\n  }\r\n  \r\n\r\n componentWillReceiveProps(nextProps){\r\n  const {users}  = this.props;\r\n  if(nextProps.users !==users){\r\n    this.setState({\r\n      filteredUsers: nextProps.users,\r\n    });\r\n  }\r\n }\r\n\r\n updateCampaignArray = (arr) => {\r\n  console.log(arr,this.state,this.props)\r\n }\r\n\r\n  componentDidMount = () =>{\r\n    const {defaultCampaignArray} =  this.props\r\n    this.props.actions.loadUsers();\r\n    const that = this;\r\n    window.AddCampaigns = function(arr){\r\n     if(Array.isArray(arr)){\r\n      that.setState({newCampaignArray : [...defaultCampaignArray,...arr]});\r\n     } else {\r\n       console.log(\"AddCampaigns method accepts only array\");\r\n     }\r\n   }\r\n  }\r\n\r\n  componentDidUpdate = (prevProps,prevState) => {\r\n    console.log(prevState,this.props, this.state)\r\n  }\r\n\r\n  onTextSearch = (e) =>{\r\n    this.setState({\r\n      searchText: e.target.value,\r\n    });\r\n  }\r\n\r\n  setStartDate = (e) =>{\r\n    this.setState({\r\n      startDate: e.target.value,\r\n    });\r\n  }\r\n  \r\n  setEndDate = (e) =>{\r\n    this.setState({\r\n      endDate: e.target.value,\r\n    });\r\n  }\r\n\r\n  updateHandler = () =>{\r\n    const {users}  = this.props;\r\n    const {startDate, endDate, searchText}  = this.state;\r\n    const filteredUsers = users.filter(user => {\r\n      let textSearchFilter = true;\r\n      let startDateFilter = true;\r\n      let endDateFilter = true;\r\n      if(searchText){\r\n        textSearchFilter = user.campaignName.toLowerCase().indexOf(\r\n          searchText.toLowerCase()) !== -1;\r\n      }\r\n      if(startDate){\r\n        startDateFilter = moment(user.startDate) > moment(startDate);\r\n      }\r\n      if(endDate){\r\n        endDateFilter = moment(user.endDate) < moment(endDate);\r\n      }\r\n      return textSearchFilter && startDateFilter && endDateFilter;\r\n      \r\n    });\r\n    this.setState({\r\n      filteredUsers: filteredUsers,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App container\" >     \r\n        {this.props.showLoader ?\r\n          <Loader/> :\r\n          <>\r\n          <div className=\"row search-area\">\r\n            <DatePicker\r\n              setStartDate={this.setStartDate}\r\n              setEndDate={this.setEndDate}\r\n              startDate={this.state.startDate}\r\n              endDate={this.state.endDate}\r\n              />\r\n              <SearchUsers \r\n                onTextSearch= {this.onTextSearch}\r\n                searchText ={this.state.searchText}\r\n                updateHandler={this.updateHandler}\r\n              />\r\n          </div>\r\n          \r\n          <UsersList \r\n            campaignArray = {this.state.filteredUsers}\r\n          />\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.usersCampaign.users,\r\n    showLoader: state.usersCampaign.showLoader,\r\n    defaultCampaignArray: state.usersCampaign.defaultCampaignArray,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(userActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n"]},"metadata":{},"sourceType":"module"}